# Based on
# - https://github.com/marketplace/actions/setup-go-environment

name: go-test-linux.yaml

on: [push]

env:
  LD_LIBRARY_PATH: /opt/senzing/g2/lib
  SENZING_TOOLS_DATABASE_URL: "sqlite3://na:na@/tmp/sqlite/G2C.db"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      CGO_ENABLED: 1
    strategy:
      matrix:
        senzingapi-version: ["staging"]
        go: ["1.21"]
    name: Go ${{ matrix.go }} using Senzing API ${{ matrix.senzingapi-version }} on linux
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
      - name: Install Senzing API
        uses: Senzing/github-action-install-senzing-api@latest
        with:
          senzingapi-version: ${{ matrix.senzingapi-version }}
      - name: Copy /etc files
        run: sudo cp testdata/senzing-license/g2.lic /etc/opt/senzing
      - name: Copy test database files
        run: mkdir /tmp/sqlite && cp testdata/sqlite/G2C.db /tmp/sqlite/G2C.db
      # - name: Run go test
      #   run: go test -v -p 1 ./...
      - name: Run go test - main
        run: go test -v -p 1 ./.
      - name: Run go test - g2config
        run: go test -v -p 1 ./g2config
      - name: Run go test - g2configmgr
        run: go test -v -p 1 ./g2configmgr
      - name: Run go test - g2diagnostic
        run: go test -v -p 1 ./g2diagnostic
      - name: Run go test - g2engine
        run: go test -v -p 1 ./g2engine
      # - name: Run go test - g2product
      #   run: go test -v -p 1 ./g2product
